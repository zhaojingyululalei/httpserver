#include <yaml-cpp/yaml.h>
#include <iostream>
#include <string>

class Config {
public:
    void loadYamlToConfig(const YAML::Node &root);
private:
    void printNode(const YAML::Node &node, int indent = 0);
};

void Config::printNode(const YAML::Node &node, int indent) {
    std::string indentStr(indent * 2, ' ');  // 缩进两个空格为单位

    if (node.IsScalar()) {
        std::cout << node.as<std::string>() << std::endl;
    } 
    else if (node.IsSequence()) {
        std::cout << std::endl;
        for (std::size_t i = 0; i < node.size(); ++i) {
            std::cout << indentStr << "- ";
            printNode(node[i], indent + 1);
        }
    } 
    else if (node.IsMap()) {
        std::cout << std::endl;
        for (YAML::const_iterator it = node.begin(); it != node.end(); ++it) {
            std::cout << indentStr << it->first.as<std::string>() << ": ";
            printNode(it->second, indent + 1);
        }
    } 
    else if (node.IsNull()) {
        std::cout << "null" << std::endl;
    } 
    else {
        std::cout << "[unknown type]" << std::endl;
    }
}

void Config::loadYamlToConfig(const YAML::Node &root) {
    printNode(root, 0);
}
